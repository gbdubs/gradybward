<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theory on Grady Berry Ward</title>
    <link>http://gradybward.com/tags/theory/</link>
    <description>Recent content in Theory on Grady Berry Ward</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://gradybward.com/tags/theory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/3_sat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/3_sat/</guid>
      <description>Haven’t you ever looked at SAT (the problem of finding a solution to an arbitrary expression of boolean predicates), and, realizing it can be reduced to 3-SAT, thought it must be solvable in sub-polynomial time? My intuition says so too, but this is clearly a function of naievite.
The thing that struck me about SAT generally is that it is fundamentally trying to explore a bunch of different roads at once, and reporting back the ones that don’t hit dead ends.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/bananagrams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/bananagrams/</guid>
      <description>In 2016, when I began working at Google, I started having breakfast with the same group of folks every morning - Chris, Brett, Andrew and Brandon. All of us being nerds, techno-optimists and deeply competitive, at one point Brandon described having a competition to see who could write the best AI to play the game bananagrams.
My productivity dipped precipitously over the next few days as I considered how to destroy my good friends in tiled combat.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/drafts/compression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/drafts/compression/</guid>
      <description>A year ago I set out to better understand privacy. I read about the history of data collection, I became certified in privacy practices, I began working on privacy issues in my day-to-day work. But what I first looked for has proven to be the most elusive, a general model for thinking about issues of privacy - one that isn&amp;rsquo;t based in a given historical or ethical frame. I think I&amp;rsquo;ve started to settle on such a model, so I figured I&amp;rsquo;d write down my thoughts to help me make more sense of them.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/senior_thesis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/senior_thesis/</guid>
      <description>I wrote my undergraduate thesis on the Graph Isomorphism (GI) problem, and several topics within that space. My work was version controlled on github, and the final result is here.
I was first interested in the “Paths” invariant, which is incredibly powerful test for discerning between potentially isomorphic graphs in cubic (and fully paralellizable) time, and was originally theorized to be a solution to GI. The primary findings of my thesis were that:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/trees/</guid>
      <description>Recursively enumerating all possible sparse binary trees is easy. Far harder is coming up with a stable mapping between the integers and this set of trees. I was able to do this after a lot of thought.
The code is here, but it is from like four years ago, so please be warned.</description>
    </item>
    
  </channel>
</rss>