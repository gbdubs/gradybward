<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grady Berry Ward</title>
    <link>http://gradybward.com/</link>
    <description>Recent content on Grady Berry Ward</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://gradybward.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/3_sat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/3_sat/</guid>
      <description>Haven’t you ever looked at SAT (the problem of finding a solution to an arbitrary expression of boolean predicates), and, realizing it can be reduced to 3-SAT, thought it must be solvable in sub-polynomial time? My intuition says so too, but this is clearly a function of naievite.
The thing that struck me about SAT generally is that it is fundamentally trying to explore a bunch of different roads at once, and reporting back the ones that don’t hit dead ends.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/ai_science_test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/ai_science_test/</guid>
      <description>This project is one of my least exciting.
For an ML projectin in my AI class, we were assigned a task from Kaggle - answering multiple choice questions from a ninth grade science test.
Tensor flow had been released a week beforehand, and our team used it out of the box (with slight model refactoring) to train an ML model for the competition.
Ours did really well - top 10!</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/bananagrams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/bananagrams/</guid>
      <description>In 2016, I had just started at Google, and had started having breakfast every day with the same group of folks - Chris, Brett, Andrew and Brandon. All of us being nerds, techno-optimists and deeply competitive, at one point Brandon described having a competition amongst us to see who could write the best AI to play the game bananagrams.
My productivity dipped precipitously over the next few days as I considered how to crush my good friends.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/birth_certificate_scraping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/birth_certificate_scraping/</guid>
      <description>Professor Linda Bui is a gem who really helped me enjoy the last class of my economics degree at Brandeis. So when she asked me if I could scrape all birth certificates from 1900 to 1950 in Massachusetts, I said “maybe”, rather than “no”.
I ended up using Matlab to do OCR with a combination of models for segmenting the certificates, and extracting the text for each field. The forms were either hand written or were machine printed, and I generated seperate models for each.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/calc_u/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/calc_u/</guid>
      <description>I frontloaded my classes to heavily at Brandeis, and coming into my Junior Spring Semester, I had completed the majority of the coursework requisite for my majors. During that semester, as most of my friends were abroad, I decided to work on a side project for the semester, accompanied only by a French class requisite for my graduation. This was one of the best decisions of my life.
CalcU emerged from a need I saw when tutoring.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/cgj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/cgj/</guid>
      <description>xxx</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/chase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/chase/</guid>
      <description>When I was taking his class of US foreign economic policy, Professor Kerry Chase asked me to build him a website, which I did.
I must say that the asthetic is way too “1982” for me, but hey, you have to build what the client wants!</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/cindi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/cindi/</guid>
      <description>If you haven’t yet listened to Janelle Monae’s “Metropolis” suite, drop all the committments you can, pour yourself some coffee and wine, and listen to it straight through.
Monae is a magician, a siren, an entertainer, a theorist, a historian, and a visionary. Metropolis helped me understand so much about so much that talking about it here will certainly do it an injustice. If you are interested, check out my 2016 term paper on her work within the context of historical waves of Black Feminism.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/draw_me_css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/draw_me_css/</guid>
      <description>In the third Harry Potter book, Harry is given the “Maurauder’s Map”, and one of the many images I like about this map is how the ink spreads outward from the point that it is awoken.
I wondered if you could do this in CSS, so I poked around, learned about CSS Transitions, and came up with a generalized framework for making a set of boxes animate on to the page.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/dumb_db/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/dumb_db/</guid>
      <description>While protyping front end interfaces for responsive web applications, I frequently have to mock out the data interactions with static constants in my javascript that mock server requests and responses. This has several downsides: you cannot change the data in a demo situation, inserting real requests requires you to construct the remoteand the number of mocks can explode if you are trying to make a CRUD user interface.
DumbDB is a better way.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/find_a_clinic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/find_a_clinic/</guid>
      <description>Please note - I deeply respect various opinions on the moral wight of abortion, but personally [^1] fully support the right of a woman to make her own judgements about the matter. For that reason, I believe that women should have full knowledge of all of their options when they become pregnant, and that is the aim that this project is directed toward.
[^1] I think most of us would agree that there is a difference in value between the existence of a day-old fertilized human egg, and a pregnancy that is about to be birthed.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/flux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/flux/</guid>
      <description>I saw this blog post by an extremely talented programmer, and was suprised (as he was) to find that there was a natural symmetry to the patterns he was describing. However, in digging into his code, I found that it was not actually symmetrical, but he had just made a very understandable typo which introduced this artificial symmetry.
Working with these equations, I found that the surfaces generated by them were gorgeous, and that the surface appeared to be differentiable with respect to every one of the input paramters.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/grady_docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/grady_docs/</guid>
      <description>I one time made the mistake of looking at how the Google Docs DOM is structured. I wondered if I could make a functional front end that looked similar without half a meg of divs, so I tried!
Then I wrote a backend for it (node-js, socketio), and got the project to the point where two users could edit the document together with sub-second lag.
The underlying data model for this was not only flawed, it is abysmal.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/grady_in/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/grady_in/</guid>
      <description>Go Links are a system used interally at google to create semantically meaningful short links. Grady.In replicates this functionality for use outside of the company, allowing anyone to construct short and human readable links.
This was my first forray into a serverless architechure. The system is built using Google Cloud Functions. The primary function validates a request and writes the new link (as a simple redirect) to a CDN. The client (when looking at the grady.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/hard_scrabble/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/hard_scrabble/</guid>
      <description>Pair programming is a stellar way for people to learn, particularly when paired with a partner at the same level. I saw this multiple times in action in my time as a teaching assistant for courses at Brandeis. However, the problem of assigning pairs is fundamentally challenging - if the students are given free reign, they will likely pick their friends, and the skill level of the two will be (largely) uncorrelated.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/in_line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/in_line/</guid>
      <description>In my time at Brandeis University, I spent 3 years working hard for the Brandeis Student Union. Over those three years, we had three different computer science students as “web-master”, and three politicos as “communications director”. The problem was that each “web-master” would build a beautiful website that was never able to be updated because the communications director never had the technical expertiese to update the HTML or use the static site generator.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/parley/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/parley/</guid>
      <description>Comment threads are an inherently flawed way to have a discussion, because they are strictly linear. In recent years, large organizations like facebook have realized this and have tried to reconsile it with a binary tree pattern of deeper or next. This only partially solves the problem. Far more frequently, if I want to respond to a comment, there are multiple peices of it that I want to respond to, and some may already be addressed further down the thread.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/senior_thesis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/senior_thesis/</guid>
      <description>I wrote my undergraduate thesis on the Graph Isomorphism problem, and within that, the “Paths” invariant, which is incredibly powerful test for discerning between potentially isomorphic graphs in cubic (and fully paralellizable) time.
The main findings of my thesis were that: Unlike was theorized by XXX, copaths graphs exist, and finding them is easily done through some mapreduces, or on a GPU. Measuring discriminatory power to value ratio of invariants within graph isomorphism is possible and can help us devise better algorithms for practical isomorphism detection.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/trees/</guid>
      <description>Recursively enumerating all possible sparse binary trees is easy. Far harder is coming up with a stable mapping between the integers and this set of trees. I was able to do this after a lot of thought.
The code is here, but it is from like four years ago, so please be warned.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/voat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/voat/</guid>
      <description>A good piece of art compells you to understand the process that created it, whether it is the emotion of the composer, or the logic of the painter. A revlation while looking at a piece by Frank Stella made me understand the fundamental mechanism that was generating the work, and gave me confidence that I could recreate it.
Squares (with side of size 1), with two quarter-circles in opposite corners (with radius one-half), in both configurations, with space filling between regions, forms the basis of this work by stella.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/ward_lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/ward_lab/</guid>
      <description>My father is a professor at UVM, where he studies microbiology and molecular genetics. In 2017 as a birthday present, I made him a website using Hugo, and the Academic theme. The theme I used was superb at providing most of the functionality required, but it took a few months of tinkering with my father to get everything exactly the way he wanted (publications ordered in certain ways, display settings configuration based, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/website_v1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/website_v1/</guid>
      <description>In my original website, I wanted to play with the fundamental assumption of what a webpage renders as - a series of nested boxes. The idea of an expanding button that becomes the page facinated me, particularly since the new page had buttons for the old one (I was reading all about golden-braids in GEB at the time).
This isn’t great work, but it reflects where I was at at the time - having fun, experimenting, and learning Javascript.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/website_v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/website_v2/</guid>
      <description>I took an architechure class in my Senior Year at Brandeis that awoke an asthetic sense I had not previously identified or listened to. In particular, the de-stijl primitive of intersecting planes struck a resonant chord in my sense of beauty.
That new asthetic, in combination with “draw me CSS” was the inspiration for V2 of my website - meant to resemble something in between a circut board, the maurader’s map, and the de-stijl classic “Composition in black, red, yellow and blue”.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/website_v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/website_v3/</guid>
      <description>When I tried to update my website in December of 2017, I couldn’t find the files anywhere on my laptop or github. This was a surprise, but one that I took as an opporotunity to recreate the site from scratch, using best practices from the start, and making some design changes. Luckily I later found these files, and posted them as V2 on this page.
The result is the site you see before you - with a detailed portfolio section, some nice hugo-templated HTML, and the cute animations (which are NOT generated via draw-me-css).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/wsmd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/wsmd/</guid>
      <description>Maddie Dollins is a dear friend who is frequently frustratingly indecisive.
One night at dinner she asked if she should have chocolate milk - to which I said “I do not care”. She then asked if she should have regular milk. This broke the camel’s back, and in a rush of an hour, I built and published WSMD - What Should Maddie Do - a simplified magic-eight-ball that simply returns a yes or no.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://gradybward.com/project/zina_b_ward/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gradybward.com/project/zina_b_ward/</guid>
      <description>Over christmas break, I got frusturated with my sister’s incredibly specific asks from a wordpress template, so I built her a website instead.
After a brief period of haggling over the acceptable level of bells and whilstles (I wanted more), we came to a resonable design consensus, and I implemented the site and fine tuned it with its owner in about five hours.</description>
    </item>
    
  </channel>
</rss>